<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ed.synthsys.biodare2</groupId>
	<artifactId>biodare2-backend-rest</artifactId>
	<version>3.0.0.2150</version>
	<name>BioDare2-REST-Trunk</name>
	<description>BioDare2 backend service</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
            <bd.data.version>1.6.0</bd.data.version>
            <bd.period.version>1.6.0</bd.period.version>
            <java.version>11</java.version>
            <maven.compiler.source>11</maven.compiler.source>
            <maven.compiler.target>11</maven.compiler.target>
            <!--<hibernate.version>5.6.14.Final</hibernate.version>-->
            <lucene.version>8.4.1</lucene.version>
            <!-- fixed h2 version as was not working with hibernate. Could not drop tables between tests -->
            <!-- <h2.version>1.4.199</h2.version>-->
            <!--<spring-security.version>5.8.1</spring-security.version>-->
	</properties>

    <dependencyManagement>
        <dependencies>
		
            <dependency>
                    <groupId>ed.biodare.data</groupId>
                    <artifactId>data-bom</artifactId>
                    <version>${bd.data.version}</version>
                    <type>pom</type>
                    <scope>import</scope>
            </dependency>
            
            <dependency>
                    <groupId>ed.biodare.period</groupId>
                    <artifactId>period-dom-bom</artifactId>
                    <version>${bd.period.version}</version>
                    <type>pom</type>
                    <scope>import</scope>
            </dependency>                                  
        </dependencies>
    </dependencyManagement> 
    
	<dependencies>

            <!-- added cause of log4j vulnerabiliy 
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-to-slf4j</artifactId>
                <version>2.16.0</version>
            </dependency>            
            <dependency>
              <groupId>org.apache.logging.log4j</groupId>
              <artifactId>log4j-api</artifactId>
              <version>2.16.0</version>
            </dependency>     -->
                
                                          
                <!-- to be run when upgrading spring -->                               
                <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-properties-migrator</artifactId>
                        <scope>runtime</scope>
                </dependency> 
                
            
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
                
                
                
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>      
                        <!-- that is fixed cause the in memorry detabase was not cleaned between test                  
                        <version>${h2.version}</version>                 
                        -->
			<scope>runtime</scope>
		</dependency>
                
                
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency> 
                
                <!--                            
                <dependency>
                    <groupId>org.mariadb.jdbc</groupId>
                    <artifactId>mariadb-java-client</artifactId>
                    <scope>runtime</scope>
                </dependency>  -->   
                                             
                        
                <!-- caching -->
                <dependency>
                    <groupId>com.github.ben-manes.caffeine</groupId>
                    <artifactId>caffeine</artifactId>
                    <!--<version>2.3.3</version>-->
                </dependency>        
                

                
                <!-- Search  -->
                <dependency>
                    <groupId>org.apache.lucene</groupId>
                    <artifactId>lucene-core</artifactId>
                    <version>${lucene.version}</version>
                </dependency>   
                
                <dependency>
                    <groupId>org.apache.lucene</groupId>
                    <artifactId>lucene-queryparser</artifactId>
                    <version>${lucene.version}</version>
                </dependency>                                          
                
                
                <!-- pool for lock -->        
                <dependency>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-pool2</artifactId>
                    <!--<version>2.4.2</version>-->
                </dependency>                                                        
                <!-- pool for lock --> 
                
                <dependency>
                    <groupId>ed.biodare.data</groupId>
                    <artifactId>tsdata-dom</artifactId>
                </dependency>
                
                <dependency>
                    <groupId>ed.biodare.period</groupId>
                    <artifactId>period-dom</artifactId>
                </dependency>                

                <dependency>
                    <groupId>ed.biodare.data</groupId>
                    <artifactId>data-util</artifactId>
                </dependency>                        

                <dependency>
                    <groupId>ed.biodare.data</groupId>
                    <artifactId>data-json</artifactId>
                </dependency>   
                
                <!-- excel utils -->
                <dependency>
                        <groupId>ed.biodare.data</groupId>
                        <artifactId>excel-tools</artifactId>
                        <!--<version>1.5-SNAPSHOT</version>-->
                </dependency>
                <!-- excel utils -->  
                                                          

                <!-- topcount -->
                <dependency>
                        <groupId>ed.biodare.data</groupId>
                        <artifactId>topcount</artifactId>
                        <!--<version>1.3-SNAPSHOT</version>-->
                </dependency>  

                <!-- for detrending -->
                <dependency>
                    <groupId>ed.biodare.period</groupId>
                    <artifactId>MESA</artifactId>
                    <version>1.6.0</version>
                </dependency> 
                              
                <dependency>
                    <groupId>ed.biodare.jobcentre2</groupId>
                    <artifactId>client</artifactId>
                    <version>3.0.0-SNAPSHOT</version>
                </dependency> 
                
                        
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
                <!-- Had to be added so the old test will run after upgrading to SB2.6 from 2.3 -->
                <dependency>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                    <scope>test</scope>
                </dependency>
                
                
                <!-- for restTemplate with handling options on request -->
                <dependency>
                        <groupId>org.apache.httpcomponents.client5</groupId>
                        <artifactId>httpclient5</artifactId>
                        <scope>test</scope>
                </dependency>                 
                
                <!-- for testing equality by reflection -->
                <dependency>
                    <groupId>org.unitils</groupId>
                    <artifactId>unitils-core</artifactId>
                    <version>3.4.2</version>
                    <scope>test</scope>
                </dependency>                   
                
                 <!-- for jaxb support --> 
                <!--<dependency>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                </dependency> -->
                
                <!--<dependency>
                    <groupId>org.glassfish.jaxb</groupId>
                    <artifactId>jaxb-runtime</artifactId>
                </dependency>-->


                <!-- for jax-ws JobCentre client -->                                 
                <!-- https://mvnrepository.com/artifact/javax.xml.ws/jaxws-api -->
                <!--
                <dependency>
                    <groupId>javax.xml.ws</groupId>
                    <artifactId>jaxws-api</artifactId>
                </dependency>  
                
                <dependency>
                    <groupId>com.sun.xml.ws</groupId>
                    <artifactId>jaxws-rt</artifactId>
                    <version>2.3.1</version>
                </dependency>  
                <dependency>
                    <groupId>com.sun.xml.ws</groupId>
                    <artifactId>rt</artifactId>
                    <version>2.3.1</version>
                </dependency>                                                                                                                                                                                                                                                                                                                
                -->

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
                                <configuration>
                                    <executable>true</executable>
                                </configuration>
                        </plugin>
		</plugins>
	</build>


    <!-- 
    Profiles are defined, so the application.properties file is not included by defautl
    in the build jar. To prevent including local configurations in the production deployment.
    
    Normally local profile is activated and the properties file is being copied from the src/profiles/local.
    
    When boundling for production, the prod profile is activated and the copying is not happening.
    
    For it to work custom action was defined in netbeans:
    Properties, Actions, Custom: Boundle
        -   clean install
        -   profile prod
        -   and Add, skip tests
        
    Also the clean install actions has the profile prod activated
    
    The custom Action is triggered by Project, custom, Boundle
    
    Based on SO: http://stackoverflow.com/a/8511414/4483840  
    
    Also replaced the run procject action with:
    spring-boot:run
    profile local
     
    Original settings:
        process-classes org.codehaus.mojo:exec-maven-plugin:1.2.1:exec
    Params:
        exec.args=-classpath %classpath ed.biodare2.BioDare2WSApplication
        exec.executable=java                       
        
    -->
    <profiles>
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                    </resource>
                    <resource>
                        <directory>src/profiles/local</directory>
                    </resource>
                    <resource>
                        <directory>../security</directory>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                    </resource>
                    <resource>
                        <directory>src/profiles/prod</directory>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>

 
</project>
